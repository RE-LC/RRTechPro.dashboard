generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider     = "postgres"
  url          = env("DATABASE_URL")
  relationMode = "prisma"
}


model User {
  id        String    @id @default(nanoid())
  cid       String    @unique
  email     String    @unique
  firstname String
  lastname  String
  username  String
  posts     Post[]
  comments  Comment[]
  likes     Like[]
}

model Category {
  id          String  @id @default(nanoid())
  name        String  @unique
  slug        String  @unique
  description String?
  posts       Post[]
}

model Tag {
  id    String @id @default(nanoid())
  name  String @unique
  posts Post[]
}

model Comment {
  id      String @id @default(nanoid())
  content String

  user        User   @relation(fields: [commentorId], references: [id])
  commentorId String

  comment Comment? @relation("CommentToComment", fields: [commentId], references: [id], onDelete: Restrict, onUpdate: Restrict)

  commentId String?

  comments Comment[] @relation("CommentToComment")

  post   Post   @relation(fields: [postId], references: [id])
  postId String

  @@index([commentorId])
  @@index([postId])
  @@index([commentId])
}

model Post {
  id          String   @id @default(cuid())
  slug        String   @unique
  title       String
  description String
  content     String
  coverImage  String
  keywords    String[]

  published   Boolean   @default(false)
  publishedAt DateTime?
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt

  author   User   @relation(fields: [authorId], references: [id])
  authorId String

  category   Category @relation(fields: [categoryId], references: [id])
  categoryId String

  tags Tag[]

  comments Comment[]
  Like     Like[]

  @@index([authorId])
  @@index([categoryId])
}

model Like {
  id     Int    @id @default(autoincrement())
  user   User   @relation(fields: [userId], references: [id])
  userId String
  post   Post   @relation(fields: [postId], references: [id])
  postId String

  @@index([userId])
  @@index([postId])
}
